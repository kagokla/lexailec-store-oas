get:
  tags:
    - Cart
  summary: Returns the list of products in the customer's shopping cart
  description: Returns the list of products in the customer's shopping cart
  operationId: getCartProductsByCustomerID
  parameters:
    - $ref: '../components/parameters/PathCustomerID.yaml'
  responses:
    200:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '../components/schemas/Product.yaml'
    403:
      $ref: '../components/responses/ForbiddenError.yaml'
    404:
      description: The specified customer ID does not exist
      $ref: '../components/responses/NotFoundError.yaml'

post:
  parameters:
    - $ref: '../components/parameters/PathCustomerID.yaml'
  tags:
    - Cart
  summary: Adds a product to the customer's shopping cart
  description: Adds a product to cart if it doesn't exist, or increases quantity by specified number of products if it does
  operationId: addCartProductsByCustomerID
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../components/schemas/Product.yaml'
  responses:
    200:
      description: Products added successfully
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '../components/schemas/Product.yaml'
    403:
      $ref: '../components/responses/ForbiddenError.yaml'
    404:
      description: The specified customer ID does not exist
      $ref: '../components/responses/NotFoundError.yaml'

put:
  tags:
    - Cart
  summary: Replace a product in the customer's shopping cart
  description: Replace a product in the customer's shopping cart
  operationId: replaceProductsByCustomerID
  parameters:
    - $ref: '../components/parameters/PathCustomerID.yaml'
  requestBody:
    content:
      application/json:
        schema:
          $ref: '../components/schemas/Product.yaml'
  responses:
    200:
      description: Products replaced successfully
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '../components/schemas/Product.yaml'
    403:
      $ref: '../components/responses/ForbiddenError.yaml'
    404:
      description: The specified customer ID does not exist
      $ref: '../components/responses/NotFoundError.yaml'